<?php

namespace Ayesh\ComposerAutoloadMin;

use Composer\Command\DumpAutoloadCommand;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Output\OutputInterface;

class DumpAutololoadMinCommand extends DumpAutoloadCommand {
    protected function configure()
    {
        parent::configure();
        $this->setName('dump-min-autoload');
        $this->setAliases(['dma', 'dump-mini-autoload']);
        $this->setDescription('Dumps a minimal version of the autoloader');
        $this
            ->setDefinition(array(
                                new InputOption('no-scripts', null, InputOption::VALUE_NONE, 'Skips the execution of all scripts defined in composer.json file.'),
                                new InputOption('optimize', 'o', InputOption::VALUE_NONE, 'Optimizes PSR0 and PSR4 packages to be loaded with classmaps too, good for production.'),
                                new InputOption('classmap-authoritative', 'a', InputOption::VALUE_NONE, 'Autoload classes from the classmap only. Implicitly enables `--optimize`.'),
                                new InputOption('apcu', null, InputOption::VALUE_NONE, 'Use APCu to cache found/not-found classes.'),
                                new InputOption('no-dev', null, InputOption::VALUE_NONE, 'Disables autoload-dev rules.'),
                            ))
            ->setHelp(
                <<<EOT
<info>php composer.phar dump-min-autoload</info>
@todo

EOT
            )
        ;
    }

    /** @noinspection NullPointerExceptionInspection */
    protected function execute(InputInterface $input, OutputInterface $output) {
        $composer = $this->getComposer();

        $composer->setAutoloadGenerator(
            new MinAutoloadGenerator(
                $composer->getEventDispatcher(),
                $this->getIO()
            )
        );
        return parent::execute($input, $output); // TODO: Change the autogenerated stub
    }
}
